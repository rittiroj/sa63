// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/Admin/app/ent/drug"
	"github.com/Admin/app/ent/registerstore"
	"github.com/Admin/app/ent/schema"
	"github.com/Admin/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	drugFields := schema.Drug{}.Fields()
	_ = drugFields
	// drugDescName is the schema descriptor for Name field.
	drugDescName := drugFields[0].Descriptor()
	// drug.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	drug.NameValidator = drugDescName.Validators[0].(func(string) error)
	// drugDescValue is the schema descriptor for value field.
	drugDescValue := drugFields[1].Descriptor()
	// drug.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	drug.ValueValidator = drugDescValue.Validators[0].(func(int) error)
	registerstoreFields := schema.RegisterStore{}.Fields()
	_ = registerstoreFields
	// registerstoreDescName is the schema descriptor for name field.
	registerstoreDescName := registerstoreFields[0].Descriptor()
	// registerstore.NameValidator is a validator for the "name" field. It is called by the builders before save.
	registerstore.NameValidator = registerstoreDescName.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
