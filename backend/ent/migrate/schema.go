// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DrugsColumns holds the columns for the "drugs" table.
	DrugsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// DrugsTable holds the schema information for the "drugs" table.
	DrugsTable = &schema.Table{
		Name:        "drugs",
		Columns:     DrugsColumns,
		PrimaryKey:  []*schema.Column{DrugsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RegisterStoresColumns holds the columns for the "register_stores" table.
	RegisterStoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// RegisterStoresTable holds the schema information for the "register_stores" table.
	RegisterStoresTable = &schema.Table{
		Name:        "register_stores",
		Columns:     RegisterStoresColumns,
		PrimaryKey:  []*schema.Column{RegisterStoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RequisitionsColumns holds the columns for the "requisitions" table.
	RequisitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "value", Type: field.TypeInt},
		{Name: "added_time", Type: field.TypeTime},
		{Name: "drug_id", Type: field.TypeInt, Nullable: true},
		{Name: "registerstore_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// RequisitionsTable holds the schema information for the "requisitions" table.
	RequisitionsTable = &schema.Table{
		Name:       "requisitions",
		Columns:    RequisitionsColumns,
		PrimaryKey: []*schema.Column{RequisitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "requisitions_drugs_requisitions",
				Columns: []*schema.Column{RequisitionsColumns[3]},

				RefColumns: []*schema.Column{DrugsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "requisitions_register_stores_requisitions",
				Columns: []*schema.Column{RequisitionsColumns[4]},

				RefColumns: []*schema.Column{RegisterStoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "requisitions_users_requisitions",
				Columns: []*schema.Column{RequisitionsColumns[5]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DrugsTable,
		RegisterStoresTable,
		RequisitionsTable,
		UsersTable,
	}
)

func init() {
	RequisitionsTable.ForeignKeys[0].RefTable = DrugsTable
	RequisitionsTable.ForeignKeys[1].RefTable = RegisterStoresTable
	RequisitionsTable.ForeignKeys[2].RefTable = UsersTable
}
